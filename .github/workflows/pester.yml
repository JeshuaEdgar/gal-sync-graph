name: Pester
on:
  push:
jobs:
  test-pwsh-v7:
    strategy:
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - name: Run Pester tests (pwsh v7)
      run: |
        Write-host $PSVersionTable.PSVersion.Major $PSVersionTable.PSRemotingProtocolVersion.Minor
        Set-PSRepository psgallery -InstallationPolicy trusted
        Install-Module -Name Pester -RequiredVersion 5.5.0 -confirm:$false -Force
        $parameters = @{applicationID = "${{ secrets.APPLICATIONID}}"; applicationSecret = "${{ secrets.APPLICATIONSECRET}}"; tenantID = "${{ secrets.TENANTID}}"}
        ./Tests/GALSync.tests.ps1 @parameters 
        if ($Error[0].Fullyqualifiederrorid -eq 'PesterAssertionFailed') {exit 1}
      shell: pwsh

  test-posh-v5:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run Pester tests (PowerShell v5)
      run: |
        Write-host $PSVersionTable.PSVersion.Major $PSVersionTable.PSRemotingProtocolVersion.Minor
        Set-PSRepository psgallery -InstallationPolicy trusted
        Install-Module -Name Pester -RequiredVersion 5.5.0 -Confirm:$false -Force
        $parameters = @{applicationID = "${{ secrets.APPLICATIONID}}"; applicationSecret = "${{ secrets.APPLICATIONSECRET}}"; tenantID = "${{ secrets.TENANTID}}"}
        ./Tests/GALSync.tests.ps1 @parameters 
        if ($Error[0].Fullyqualifiederrorid -eq 'PesterAssertionFailed') {exit 1}
      shell: powershell